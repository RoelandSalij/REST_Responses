// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package rest_responses.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the REST_Responses module
	public static void addValidationMessageToList(IContext context, java.lang.String _message, java.util.List<rest_responses.proxies.ValidationError> _validationErrorList, java.lang.String _parameterName)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Message", _message);
		java.util.ArrayList<IMendixObject> listparam_validationErrorList = null;
		if (_validationErrorList != null)
		{
			listparam_validationErrorList = new java.util.ArrayList<>();
			for (rest_responses.proxies.ValidationError obj : _validationErrorList)
				listparam_validationErrorList.add(obj.getMendixObject());
		}
		params.put("ValidationErrorList", listparam_validationErrorList);

		params.put("ParameterName", _parameterName);
		Core.microflowCall("REST_Responses.AddValidationMessageToList").withParams(params).execute(context);
	}
	public static java.lang.String getProblemResponseAsJSON(IContext context, java.lang.String _title, java.lang.String _detail, java.lang.Long _status, java.lang.String _typeURI, java.util.List<rest_responses.proxies.ValidationError> _validationErrorList, java.lang.String _instance)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Title", _title);
		params.put("Detail", _detail);
		params.put("Status", _status);
		params.put("TypeURI", _typeURI);
		java.util.ArrayList<IMendixObject> listparam_validationErrorList = null;
		if (_validationErrorList != null)
		{
			listparam_validationErrorList = new java.util.ArrayList<>();
			for (rest_responses.proxies.ValidationError obj : _validationErrorList)
				listparam_validationErrorList.add(obj.getMendixObject());
		}
		params.put("ValidationErrorList", listparam_validationErrorList);

		params.put("instance", _instance);
		return (java.lang.String) Core.microflowCall("REST_Responses.GetProblemResponseAsJSON").withParams(params).execute(context);
	}
	public static java.lang.String getValidationErrorsAsString(IContext context, java.util.List<rest_responses.proxies.ValidationError> _validationErrorList)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_validationErrorList = null;
		if (_validationErrorList != null)
		{
			listparam_validationErrorList = new java.util.ArrayList<>();
			for (rest_responses.proxies.ValidationError obj : _validationErrorList)
				listparam_validationErrorList.add(obj.getMendixObject());
		}
		params.put("ValidationErrorList", listparam_validationErrorList);

		return (java.lang.String) Core.microflowCall("REST_Responses.GetValidationErrorsAsString").withParams(params).execute(context);
	}
}