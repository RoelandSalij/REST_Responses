// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package rest_responses.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import rest_responses.ErrorMessageProvider;
import rest_responses.RESTResponseProvider;
import java.util.UUID;

/**
 * The request could not be completed due to a conflict with the current state of the resource. 
 * This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. 
 * 
 * The response body SHOULD include enough information for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required.
 */
public class Create_409_CONFLICT extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __HTTPResponse;
	private system.proxies.HttpResponse HTTPResponse;
	private java.lang.String Detail;
	private java.lang.String LogMessageDetails;

	public Create_409_CONFLICT(IContext context, IMendixObject HTTPResponse, java.lang.String Detail, java.lang.String LogMessageDetails)
	{
		super(context);
		this.__HTTPResponse = HTTPResponse;
		this.Detail = Detail;
		this.LogMessageDetails = LogMessageDetails;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.HTTPResponse = __HTTPResponse == null ? null : system.proxies.HttpResponse.initialize(getContext(), __HTTPResponse);

		// BEGIN USER CODE
		ErrorMessageProvider emp = new ErrorMessageProvider(getContext(), "Conflict", this.Detail, 409, null, null, LogMessageDetails);
		
		Core.getLogger("ProblemJSONModule").error(emp.getLogMessage());
		
		RESTResponseProvider rp = new RESTResponseProvider(this.context(), __HTTPResponse, 409, emp.getJSONResponseMessage(), "Conflict");
		rp.addHttpHeader("Content-type", "application/json");
		return rp.getResponse();

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Create_409_CONFLICT";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
