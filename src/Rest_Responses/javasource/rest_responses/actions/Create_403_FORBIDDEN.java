// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package rest_responses.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import rest_responses.ErrorMessageProvider;
import rest_responses.RESTResponseProvider;
import java.util.UUID;

/**
 * A 403 error response indicates that the client's request is formed correctly, but the REST API refuses to honor it i.e. the user does not have the necessary permissions for the resource. A 403 response is not a case of insufficient client credentials; that would be 401 (Unauthorized).
 * 
 * Authentication will not help and the request SHOULD NOT be repeated. Unlike a 401 Unauthorized response, authenticating will make no difference.
 */
public class Create_403_FORBIDDEN extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __HTTPResponse;
	private system.proxies.HttpResponse HTTPResponse;
	private java.lang.String Detail;
	private java.lang.String LogMessageDetails;

	public Create_403_FORBIDDEN(IContext context, IMendixObject HTTPResponse, java.lang.String Detail, java.lang.String LogMessageDetails)
	{
		super(context);
		this.__HTTPResponse = HTTPResponse;
		this.Detail = Detail;
		this.LogMessageDetails = LogMessageDetails;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.HTTPResponse = this.__HTTPResponse == null ? null : system.proxies.HttpResponse.initialize(getContext(), __HTTPResponse);

		// BEGIN USER CODE
		ErrorMessageProvider emp = new ErrorMessageProvider(getContext(), "Forbidden", this.Detail, 403, null, null, LogMessageDetails);
		
		RESTResponseProvider rp = new RESTResponseProvider(this.context(), HTTPResponse.getMendixObject(), 403, emp.getJSONResponseMessage(), "Forbidden");
		
		return rp.getResponse();

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Create_403_FORBIDDEN";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
