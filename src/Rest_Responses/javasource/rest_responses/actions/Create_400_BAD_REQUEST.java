// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package rest_responses.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import rest_responses.ErrorMessageProvider;
import rest_responses.RESTResponseProvider;
import java.util.UUID;

/**
 * The request could not be understood by the server due to malformed syntax.
 */
public class Create_400_BAD_REQUEST extends CustomJavaAction<IMendixObject>
{
	private java.lang.String Title;
	private IMendixObject __HTTPResponse;
	private system.proxies.HttpResponse HTTPResponse;
	private java.lang.String Detail;
	private java.lang.String TypeURI;
	private java.util.List<IMendixObject> __ValidationErrors;
	private java.util.List<rest_responses.proxies.ValidationError> ValidationErrors;
	private java.lang.String LogMessageDetails;

	public Create_400_BAD_REQUEST(IContext context, java.lang.String Title, IMendixObject HTTPResponse, java.lang.String Detail, java.lang.String TypeURI, java.util.List<IMendixObject> ValidationErrors, java.lang.String LogMessageDetails)
	{
		super(context);
		this.Title = Title;
		this.__HTTPResponse = HTTPResponse;
		this.Detail = Detail;
		this.TypeURI = TypeURI;
		this.__ValidationErrors = ValidationErrors;
		this.LogMessageDetails = LogMessageDetails;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		String title = this.Title;
		
		if(title == null || title.isEmpty()) {
			title = "Bad Request";
		}
		
		ErrorMessageProvider emp = new ErrorMessageProvider(getContext(), title, Detail, 400, TypeURI, ValidationErrors, LogMessageDetails);
		
		RESTResponseProvider rp = new RESTResponseProvider(this.context(), HTTPResponse.getMendixObject(), 400, emp.getJSONResponseMessage(), "Bad Request");
		
		return rp.getResponse();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Create_400_BAD_REQUEST";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
