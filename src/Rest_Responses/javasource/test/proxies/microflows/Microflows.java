// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package test.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Test module
	public static void addValidationErrorObject(IContext context, java.util.List<rest_responses.proxies.ValidationError> _validationErrorList, java.lang.String _name, java.lang.String _reason)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_validationErrorList = null;
		if (_validationErrorList != null)
		{
			listparam_validationErrorList = new java.util.ArrayList<>();
			for (rest_responses.proxies.ValidationError obj : _validationErrorList)
				listparam_validationErrorList.add(obj.getMendixObject());
		}
		params.put("ValidationErrorList", listparam_validationErrorList);

		params.put("name", _name);
		params.put("reason", _reason);
		Core.microflowCall("Test.AddValidationErrorObject").withParams(params).execute(context);
	}
	public static java.util.List<rest_responses.proxies.ValidationError> createDummyValidationErrorList(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("Test.CreateDummyValidationErrorList").withParams(params).execute(context);
		java.util.List<rest_responses.proxies.ValidationError> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(rest_responses.proxies.ValidationError.initialize(context, obj));
		}
		return result;
	}
	public static test.proxies.Helper dS_Test(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Test.DS_Test").withParams(params).execute(context);
		return result == null ? null : test.proxies.Helper.initialize(context, result);
	}
	public static void getHTTPResponse(IContext context, test.proxies.Helper _helper)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Helper", _helper == null ? null : _helper.getMendixObject());
		Core.microflowCall("Test.GetHTTPResponse").withParams(params).execute(context);
	}
	public static system.proxies.HttpResponse getHTTPResponseObject(IContext context, test.proxies.Helper _helper)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Helper", _helper == null ? null : _helper.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Test.GetHTTPResponseObject").withParams(params).execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, result);
	}
	public static void pOST_Language(IContext context, system.proxies.HttpRequest _httpRequest, system.proxies.HttpResponse _httpResponse)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpRequest", _httpRequest == null ? null : _httpRequest.getMendixObject());
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		Core.microflowCall("Test.POST_Language").withParams(params).execute(context);
	}
}